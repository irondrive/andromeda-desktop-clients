#!/bin/bash -e

if ! [ -e build ]; then mkdir build; fi; cd build

if [ "$1" != "noinit" ]; then
    cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
fi

PLATFORMS="native unix32 unix64 win32A win32W win64"
LOGFILE=cppcheck/analyze_stderr.log

for PLAT in $PLATFORMS; do
    if [ -e $LOGFILE ]; then rm $LOGFILE; fi
    if ! [ -e cppcheck/$PLAT ]; then mkdir -p cppcheck/$PLAT; fi

    echo "scanning platform $PLAT..."
    cppcheck --project=compile_commands.json \
        --cppcheck-build-dir=cppcheck/$PLAT \
        --quiet --std=c++17 --platform=$PLAT \
        --suppress="*:*_deps/*" \
        --suppress=missingIncludeSystem \
        --suppress=unreadVariable \
        --suppress=unusedFunction \
        --suppress=unmatchedSuppression \
        --enable=style,performance,portability,information $@ 2> $LOGFILE

    if [ -s $LOGFILE ]; then
        echo "found errors with target $PLAT!"
        cat $LOGFILE
        exit 1
    fi
done; rm $LOGFILE
