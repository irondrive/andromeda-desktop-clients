name: Master CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            compiler: gcc
          - os: ubuntu-22.04
            compiler: clang
          - os: ubuntu-20.04
            compiler: gcc
          - os: ubuntu-20.04
            compiler: clang
          - os: macos-latest
            compiler: clang
          - os: windows-2019
            compiler: msvc

    steps:
    - uses: actions/checkout@v3
    - name: Install (ubuntu-22.04)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt update
        sudo apt install -y make cmake g++ clang clang-tidy cppcheck python3 libssl-dev libcrypt-dev libfuse3-dev qt6-base-dev
        if [ "${{ matrix.compiler }}" = "clang" ]; then
          echo CC=clang >> $GITHUB_ENV; echo CXX=clang++ >> $GITHUB_ENV
        fi
    - name: Install (ubuntu-20.04)
      if: matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt update
        sudo apt install -y make cmake g++ clang clang-tidy cppcheck python3 libssl-dev libcrypt-dev libfuse-dev qtbase5-dev
        if [ "${{ matrix.compiler }}" = "clang" ]; then
          echo CC=clang >> $GITHUB_ENV; echo CXX=clang++ >> $GITHUB_ENV
        fi
    - name: Install (macos-latest)
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install bash cmake openssl macfuse qt 
    - name: Install Qt (windows-2019)
      if: matrix.os == 'windows-2019'
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.0'
    - name: Install (windows-2019)
      if: matrix.os == 'windows-2019'
      run: |
        choco install openssl winfsp -y
        
    - name: Build and Test (ubuntu-22.04)
      if: matrix.os == 'ubuntu-22.04'
      # github ubuntu22 seems to have an issue with OPENGL_INCLUDE_DIR
      run: |
        tools/builddev -DOPENGL_INCLUDE_DIR=/usr/include
        tools/buildrel -DOPENGL_INCLUDE_DIR=/usr/include -DTESTS_CATCH2=1
    - name: Build and Test (ubuntu-20.04)
      if: matrix.os == 'ubuntu-20.04'
      run: |
        tools/builddev
        tools/buildrel -DTESTS_CATCH2=1
    - name: Build and Test (macos-latest)
      if: matrix.os == 'macos-latest'
      run: |
        tools/builddev -DTESTS_CLANGTIDY=0 -DTESTS_CPPCHECK=0
        tools/buildrel -DTESTS_CATCH2=1
    - name: Build and Test (windows-2019)
      if: matrix.os == 'windows-2019'
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Debug -DTESTS_CATCH2=1
        cmake --build . --config Debug

    - name: Execute --version (ubuntu, macos)
      if: matrix.os == 'ubuntu-22.04' || matrix.os == 'ubuntu-20.04' || matrix.os == 'macos-latest'
      run: |
        build/bin/cli/andromeda-cli --version
        build/bin/fuse/andromeda-fuse --version
        build/bin/gui/andromeda-gui --version
    - name: Execute --version (windows)
      if: matrix.os == 'windows-2019'
      run: |
        cd build/bin/cli
        andromeda-cli.exe --version
        cd ../fuse
        andromeda-fuse.exe --version
        cd ../gui
        andromeda-gui.exe --version
        